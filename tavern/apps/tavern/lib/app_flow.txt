----------
--TAVERN--
----------

# user joins app

    -> user enters email address (UUID) (This looks cool: https://github.com/zyro/elixir-uuid)
    -> register new Person in Tavern.ActiveUsers.Registry, ie: init new person process; store PID by key(user email) in registry 
    -> send new user list of other active users 
        -> I like this, but would suggest we make some sort of look where every x time we poll the registry, possibly better to have n things polling, rather than one thing having one thing telling everyone... had a similar situation with the zombie thing and this proved (supprisingly) more effective... Concurrency is strange :|

# start chat with a user
    -> user_1 Selects user_2 from list
    -> send request to start new chat
    -> init new ChatSession
        --> start_link (__MODULE__, {user_1, user_2}, [name: ...]
        --> TODO: what should genServer name be??
    -> 


-----------------------
---ADVANCED FEATURES---
-----------------------

# Group Chats 

# Private Chats -> send msgs directly to/from user nodes??

# Super Private Chats -> same as above but as soon as user reads msg, it is then deleted. "What happens in the tavern stays in the tavern..." :)
>>>>>>> tavern_server
